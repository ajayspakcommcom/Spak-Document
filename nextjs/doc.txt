1) Initialization and Configuration:

	git init: Initialize a new Git repository in the current directory.
	git config: Configure Git settings, such as user name and email.
	
2) Cloning and Creating Copies:

	git clone <repository_url>: Clone a remote repository to your local machine.
	git clone -b <branch_name> <repository_url>: Clone a specific branch of a remote repository.
	git clone --depth 1 <repository_url>: Clone a shallow copy of a repository with only the latest commit history.
	
3) Branches:

	git branch: List all branches in the repository.
	git branch <branch_name>: Create a new branch.
	git checkout <branch_name>: Switch to a different branch.
	git checkout -b <branch_name>: Create and switch to a new branch.
	git merge <branch_name>: Merge changes from one branch into the current branch.
	git branch -d <branch_name>: Delete a branch (use -D for force deletion).
	git branch -m <new_branch_name>: Rename the current branch.
	
4) Status and Changes:

	git status: Show the status of modified and untracked files.
	git diff: Show the differences between the working directory and the last commit.
	git add <file>: Stage changes for commit.
	git reset <file>: Unstage changes for commit.
	git commit -m "Commit message": Commit staged changes with a message.
	git commit --amend: Amend the last commit with new changes.
	

5) Commit History:

	git log: View commit history.
	git log --oneline: View commit history in a concise format.
	git log --graph: View a graphical representation of commit history.
	git show <commit_hash>: Show details of a specific commit.
	

6) Remote Repositories:

	git remote: List remote repositories.
	git remote add <name> <repository_url>: Add a new remote repository.
	git push <remote_name> <branch_name>: Push local changes to a remote repository.
	git pull <remote_name> <branch_name>: Fetch and merge changes from a remote repository.
	git fetch <remote_name>: Fetch changes from a remote repository without merging.
	

7) Stashing Changes:

	git stash: Temporarily save changes that are not ready to be committed.
	git stash list: List stashes.
	git stash apply: Apply the most recent stash.
	git stash pop: Apply and remove the most recent stash.
	
8) Tags:

	git tag: List tags in the repository.
	git tag <tag_name>: Create a new tag.
	git tag -a <tag_name> -m "Tag message": Create an annotated tag with a message.
	git push --tags: Push tags to a remote repository.
	
9) Reverting and Resetting:

	git reset <commit_hash>: Reset the branch to a specific commit.
	git revert <commit_hash>: Create a new commit that undoes the changes introduced by a specific commit.
	
10) Gitignore:

	Create a .gitignore file to specify files and directories that should be ignored by Git.
	
11) Submodules:

	git submodule add <repository_url> <path>: Add a submodule to your project.
	git submodule update --init --recursive: Initialize and update submodules.
	
12) Git Clean:

	git clean -n: Dry run to show what would be removed with git clean -f.
	git clean -f: Remove untracked files and directories.